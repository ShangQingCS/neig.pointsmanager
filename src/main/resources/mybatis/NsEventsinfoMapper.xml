<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sqhl.neig.pointsmanager.mapper.NsEventsinfoMapper">
  <resultMap id="BaseResultMap" type="cn.sqhl.neig.pointsmanager.po.NsEventsinfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="isuse" jdbcType="INTEGER" property="isuse" />
    <result column="minpicture" jdbcType="VARCHAR" property="minpicture" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.sqhl.neig.pointsmanager.po.NsEventsinfoWithBLOBs">
    <result column="memo" jdbcType="LONGVARCHAR" property="memo" />
    <result column="goods" jdbcType="LONGVARCHAR" property="goods" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, isuse, minpicture, picture
  </sql>
  <sql id="Blob_Column_List">
    memo, goods
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ns_eventsinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ns_eventsinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.sqhl.neig.pointsmanager.po.NsEventsinfoWithBLOBs">
    insert into ns_eventsinfo (id, name, isuse, 
      minpicture, picture, memo, 
      goods)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{isuse,jdbcType=INTEGER}, 
      #{minpicture,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{memo,jdbcType=LONGVARCHAR}, 
      #{goods,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.sqhl.neig.pointsmanager.po.NsEventsinfoWithBLOBs">
    insert into ns_eventsinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isuse != null">
        isuse,
      </if>
      <if test="minpicture != null">
        minpicture,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="goods != null">
        goods,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isuse != null">
        #{isuse,jdbcType=INTEGER},
      </if>
      <if test="minpicture != null">
        #{minpicture,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=LONGVARCHAR},
      </if>
      <if test="goods != null">
        #{goods,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sqhl.neig.pointsmanager.po.NsEventsinfoWithBLOBs">
    update ns_eventsinfo
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isuse != null">
        isuse = #{isuse,jdbcType=INTEGER},
      </if>
      <if test="minpicture != null">
        minpicture = #{minpicture,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
      <if test="goods != null">
        goods = #{goods,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.sqhl.neig.pointsmanager.po.NsEventsinfoWithBLOBs">
    update ns_eventsinfo
    set name = #{name,jdbcType=VARCHAR},
      isuse = #{isuse,jdbcType=INTEGER},
      minpicture = #{minpicture,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=LONGVARCHAR},
      goods = #{goods,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sqhl.neig.pointsmanager.po.NsEventsinfo">
    update ns_eventsinfo
    set name = #{name,jdbcType=VARCHAR},
      isuse = #{isuse,jdbcType=INTEGER},
      minpicture = #{minpicture,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <resultMap id="eventsResultMap" type="cn.sqhl.neig.pointsmanager.vo.Eventsinfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="minpicture" jdbcType="VARCHAR" property="minpicture" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>
  <sql id="events_Column_List">
    id, name, memo, minpicture, picture
  </sql>
   <select id="selectById" parameterType="java.lang.Long" resultMap="eventsResultMap">
    select 
    <include refid="events_Column_List" />
    from ns_eventsinfo
    where id = #{id,jdbcType=BIGINT}
  </select>

  <resultMap type="cn.sqhl.neig.pointsmanager.vo.EventGoods" id="selectListMap">
  	<result column="goodsid" jdbcType="BIGINT" property="goodsid" />
  	<result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
  	<result column="goodsimg" jdbcType="VARCHAR" property="goodsimg" />
  	<result column="price" jdbcType="VARCHAR" property="price" />
  </resultMap>
   <sql id="content_Column_List">
    goodsid,goodsname,goodsimg,price
  </sql>
  <select id="queryList" resultMap="selectListMap" parameterType="java.lang.Long">
  	select 
  	<include refid="content_Column_List" />
  	from (
  		select 
  			a.goods_id as goodsid,
  			b.gname as goodsname,
  			b.goodimg as goodsimg,
  			truncate(b.price,2) as price
  		from 
  		ns_events_goods a left join (select * from ns_goods where isuse=0 ) b on a.goods_id=b.id
  		where
  		a.events_id=#{id,jdbcType=BIGINT}
  	) tmp
  	
  </select>
</mapper>